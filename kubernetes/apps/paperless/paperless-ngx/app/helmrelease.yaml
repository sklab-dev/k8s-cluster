---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app ${APP}
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controllers:
      paperless:
        annotations:
          secret.reloader.stakater.com/reload: &secret paperless-secret
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.6
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: *secret
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.14.1
            env:
              PAPERLESS_CONSUMER_POLLING: 60
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"

              # Folders
              PAPERLESS_CONSUMPTION_DIR: &consume "/nas-consume"
              PAPERLESS_DATA_DIR: &pvc "/data/data"
              PAPERLESS_EXPORT_DIR: &export "/data/export"
              PAPERLESS_MEDIA_ROOT: &media "/data/media"
              PAPERLESS_TRASH_DIR: &trash "/data/trash"


              PAPERLESS_OCR_LANGUAGES: eng deu
              PAPERLESS_OCR_LANGUAGE: eng
              PAPERLESS_OCR_USER_ARGS: '{"invalidate_digital_signatures": true}'
              PAPERLESS_PORT: &port 8000
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_TIKA_ENABLED: 1
              # Redis
              PAPERLESS_REDIS: redis://paperless-ngx-redis.paperless.svc.cluster.local:6379
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-ngx-gotenberg.paperless.svc.cluster.local
              PAPERLESS_TIKA_ENDPOINT: http://paperless-ngx-tika.paperless.svc.cluster.local
              PAPERLESS_TIME_ZONE: ${CONFIG_TIMEZONE}
              PAPERLESS_URL: https://${HOSTNAME}
            envFrom:
              - secretRef:
                  name: *secret
            resources:
              requests:
                cpu: 100m
                memory: 1000Mi
              limits:
                memory: 5000Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 30
                  timeoutSeconds: 2
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *port
                  initialDelaySeconds: 0
                  timeoutSeconds: 1
                  failureThreshold: 10
                  periodSeconds: 12   
      redis:
        containers:
          redis:
            image:
              repository: docker.io/valkey/valkey
              tag: 8.0.1
            resources:
              requests:
                cpu: 5m
                memory: 32Mi
              limits:
                memory: 128Mi

      tika:
        type: deployment
        replicas: 1
        containers:
          main:
            image:
              repository: "apache/tika"
              tag: "3.1.0.0-full@sha256:1221afa48af9158e14b8d005bbcfa49f3d7fc4e5113db48cad586955bc64992b"
            resources: # TODO: adjust (Java app)
              requests:
                cpu: "10m"
                memory: "256Mi"
              limits:
                cpu: "3000m"
                memory: "6000Mi"    
      gotenberg:
        type: deployment
        replicas: 1
        containers:
          main:
            image:
              repository: "docker.io/gotenberg/gotenberg"
              tag: "8.17.0@sha256:3ac36389a59e43a64ac56d4b683bd680ed8060374a332cbf8cef77bc6f752798"
            command: ["gotenberg", "--chromium-disable-javascript=true", "--api-timeout=180s", --chromium-allow-list=file:///tmp/.*", "--libreoffice-start-timeout=180s"]
            resources: # TODO: adjust (Go app)
              requests:
                cpu: "20m"
                memory: "128Mi"
              limits:
                cpu: "4000m"
                memory: "6000Mi"    
    service:
      paperless:
        controller: paperless
        ports:
          http:
            port: *port
      redis:
        controller: redis
        ports:
          http:
            port: 6379
      tika:
        controller: tika
        ports:
          tika:
            port: 80
            targetPort: 9998
      gotenberg:
        controller: gotenberg
        ports:
          gotenberg:
            port: 80
            targetPort: 3000


    ingress:
      paperless:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Selfhosted
          gethomepage.dev/name: Paperless
          gethomepage.dev/icon: paperless-ngx.png
          # gethomepage.dev/widget.type: paperlessngx
          # gethomepage.dev/widget.url: http://paperless.selfhosted:8000
          # gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_PAPERLESS_TOKEN}}"
        hosts:
          - host: ${HOSTNAME}
            paths:
              - path: /
                service:
                  identifier: paperless
                  port: http

    persistence:
      data:
        existingClaim: *app
        advancedMounts:
          paperless:
            app:
              - subPath: "consume"
                path: "/data/consume"
              - subPath: "data"
                path: "/data/data"
              - subPath: "export"
                path: "/data/export"
              - subPath: "media"
                path: "/data/media"
              - subPath: "trash"
                path: "/data/trash"

      nas-consume:
        existingClaim: nfs-documents-paperless-consume
        advancedMounts:
          paperless:
            app:
              - path: "/nas-consume"
      nas:
        existingClaim: nfs-documents-paperless
        advancedMounts:
          paperless:
            app:
              - path: "/nas"

    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false # avoid exposing too much info in env vars in case of lateral movement attempt
      hostAliases:
        - ip: "${APP_IP_AUTHENTIK:=127.0.0.1}"
          hostnames: ["${APP_DNS_AUTHENTIK:=authentik}"]