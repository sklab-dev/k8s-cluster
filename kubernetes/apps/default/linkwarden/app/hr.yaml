---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.2.0/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app linkwarden
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: authentik
      namespace: security

  values:
    defaultPodOptions:
      automountServiceAccountToken: false

    controllers:
      linkwarden:
        annotations:
          reloader.stakater.com/auto: "true"        
        initContainers:
          init-postgres:
            image: 
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.8
            envFrom:
              - secretRef:
                  name: linkwarden-init-secret
        containers:
          main:
            image:
              repository: ghcr.io/linkwarden/linkwarden
              tag: v2.9.3
            resources:
              requests:
                memory: 512Mi
              limits:
                memory: 600Mi
            env:
              NEXTAUTH_URL: https://${HOSTNAME}/api/v1/auth  #If set to true, registration will be disabled.
              # NEXT_PUBLIC_DISABLE_REGISTRATION: "false" #If set to true, users will be able to login with username and password.
              # DISABLE_NEW_SSO_USERS: "false" #If set to true, new users will not be able to login with SSO.
              STORAGE_FOLDER: "config" # Will always end up as /data/STOREAGE_FOLDER so eg /data/config
              NEXT_PUBLIC_AUTHENTIK_ENABLED: "true" #If set to true, Authentik will be enabled
              HOME: /data/config
            envFrom:
              - secretRef:
                  name: linkwarden-secret
    service:
      app:
        controller: linkwarden
        ports:
          http:
            port: 3000

    ingress:
      app:
        className: external
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Selfhosted
          gethomepage.dev/name: Linkwarden
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /data/config
      next-cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /data/.next/cache

